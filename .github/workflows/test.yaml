name: Tests

on:
    push:
        branches:
            - "**"
        tags-ignore:
            - "**"

jobs:
    tests:

        name: Run tests
        runs-on: ubuntu-latest

        env:
            APP_ENV: test
            DATABASE_URL: "mysql://root:password@127.0.0.1:3306/app"

        concurrency:
            group: tests-${{ github.ref_name }}
            cancel-in-progress: true

        services:

            database:
                image: mysql:8.3.0
                env:
                    MYSQL_ALLOW_EMPTY_PASSWORD: false
                    MYSQL_ROOT_PASSWORD: password
                    MYSQL_DATABASE: app_test
                ports:
                    - "3306:3306"
                options: --health-cmd="mysqladmin ping -h localhost --silent" --health-interval=10s --health-timeout=5s --health-retries=3

        steps:
            -   name: Setup Timezone
                run: sudo timedatectl set-timezone "UTC"

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: '8.3'
                    tools: composer:v2
                    coverage: none
                    extensions: mbstring, intl, pdo_mysql

            -   uses: actions/checkout@v4

            -   name: Validate composer packages
                run: composer validate --no-check-all --strict

            -   name: Cache vendor
                id: cache-vendor
                uses: actions/cache@v4
                with:
                    path: vendor
                    key: ${{ runner.os }}-composer-dev-${{ hashFiles('**/composer.lock') }}

            -   name: Install packages
                if: steps.cache-vendor.outputs.cache-hit != 'true'
                run: composer install --no-progress --no-interaction

            -   name: Check vulnerabilities
                run: composer audit
                continue-on-error: true

            -   name: Ensure database and schema exist
                run: |
                    bin/console doctrine:migrations:migrate -n

            -   name: Build Container
                run: |
                    php bin/console cache:warmup --env=test

            -   name: Lint Doctrine entities
                run: bin/console doctrine:schema:validate --skip-sync -vvv --no-interaction

            -   name: Lint Composer config
                run: composer validate --strict

            -   name: PHPCodeSniffer
                run: composer phpcs

            -   name: PHPStan
                run: composer phpstan

            -   name: PHPUnit
                run: APP_DEBUG=0 vendor/bin/phpunit --no-coverage
